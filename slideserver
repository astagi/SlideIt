#!/usr/bin/env python

# Author: Andrea Stagi <stagi.andrea@gmail.com>
# Description: the server listening to Android bluetooth requests

import os
import time
import sys

from bluetooth import *

UUID = "00001101-0000-1000-8000-00805F9B34FB"

allowed_cmds = ['Left', 'Right']

def pair(pin, device_addr):
    os.system('echo "%s" | bluez-simple-agent hci0 %s' % (pin, device_addr))

def list_device():
    print "Performing inquiry..."

    nearby_devices = discover_devices(lookup_names = True)

    print "found %d devices" % len(nearby_devices)

    for name, addr in nearby_devices:
        print " %s - %s" % (addr, name)

def exec_command(command):
    os.system('xvkbd -text "\[%s]"' % command)
    print "Command executed"

def start():
    server_sock=BluetoothSocket( RFCOMM )
    server_sock.bind(("", 29))
    server_sock.listen(400)

    port = server_sock.getsockname()[1]


    advertise_service( server_sock, "SampleServer",
                       service_id = UUID,
                       service_classes = [ UUID, SERIAL_PORT_CLASS ],
                       profiles = [ SERIAL_PORT_PROFILE ] )
                       
    print "Waiting for connection on RFCOMM channel %d" % port

    client_sock, client_info = server_sock.accept()
    print "Accepted connection from ", client_info

    try:
        while True:
            data = client_sock.recv(1)
            if len(data) == 0: break
            data = ord(data)
            print data
            if data == 0xA0:
                exec_command("F5")

            elif data == 0xA1:
                exec_command("Right")

            elif data == 0xA2:
                exec_command("Left")

            elif data == 0xA3:
                exec_command("Esc")


            print "received [%s]" % data
    except IOError:
        pass

    print "disconnected"

    client_sock.close()
    server_sock.close()
    print "all done"

def main():
    if sys.argv[1] == "list":
        list_device()
    elif sys.argv[1] == "pair":
        pair(sys.argv[2], sys.argv[3])
    elif sys.argv[1] == "start":
        start()

if __name__ == '__main__':
   main()
